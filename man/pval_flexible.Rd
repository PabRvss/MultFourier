% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pvalues.R
\name{pval_flexible}
\alias{pval_flexible}
\title{Compute p-value for a Multinomial Test}
\usage{
pval_flexible(
  x,
  p,
  stat = "prob",
  lambda = 0,
  max_time = 600,
  max_terms = 300,
  rel_eps = 0.001,
  undersampling = 1,
  verbose = FALSE
)
}
\arguments{
\item{x}{An Integer vector with realizations for each category.}

\item{p}{A Numeric vector with the probabilities for each category. These should be non-negative and sum to one. It should be the same size as ‘\code{x}’.}

\item{stat}{String with the name of the statistic to compute. If ‘\code{prob}’, the exact Multinomial p-value is computed. If ‘\code{pearson}’, the Pearson's Chi-square p-value is computed. If ‘\code{llr}’, the log-likelihood ratio p-value is computed. If ‘\code{power_div}’, a Power Divergence p-value is computed, in which case a ‘\code{lambda}’ parameter must be given. The default value is ‘\code{prob}’.}

\item{lambda}{A Numeric with the lambda value of the Power Divergence statistic. Only works if \code{stat} = ‘\code{power_div}’, otherwise is ignored.}

\item{max_time}{A Numeric with the maximum time limit in seconds. The default is 600.}

\item{max_terms}{An Integer indicating the number of terms to add in the Fourier series. The default is 300.}

\item{rel_eps}{A Numeric with the relative error tolerance. The default is 0.001.}

\item{undersampling}{An Integer with the undersampling value to use. The default and recommended value is 1. Values greater than one will speed up calculations but will sacrifice precision.}

\item{verbose}{Boolean. If ‘\code{TRUE}’, it prints intermediate results every 10 terms. If ‘\code{FALSE}’, it does not print intermediate computations. The default is ‘\code{FALSE}’.}
}
\value{
Returns a ‘\code{S3}’ object with the following attributes:
\itemize{
  \item ‘x’: The input vector of the observed realizations for each category.
  \item ‘p’: The input vector of the probabilities for each category.
  \item ‘pval’: The p-value computed.
  \item ‘gamma’: The optimal gamma obtained in the first part of the method.
  \item ‘n_terms’: The number of terms of the Fourier sum.
  \item ‘time’: The total execution time of the algorithm in seconds.
  \item ‘p0’: Probability mass function in ‘\code{x}’.
  \item ‘status’: The final status ID of the algorithm upon completion:
    \itemize{
      \item ‘0’: Converged.
      \item ‘1’: Maximum time reached.
      \item ‘2’: Maximum number of terms reached.
      \item ‘3’: Could not solve the optimization of gamma.
    }
  \item ‘message’: The finishing status displayed as a message.
  \item ‘method’: A String with value ‘fourier’ or ‘exhaustive’, depending on the method used.
}
}
\description{
This function computes the p-value for an exact Multinomial, Pearson's
Chi-Squared, log-likelihood ratio, or Power-Divergence tests. It uses full
enumeration if the cardinality of the support of the Multinomial distribution
 is less than 10^6; otherwise, it uses the Fourier method.
}
\examples{
# Example 1: Compute p-value using the exact multinomial statistic
probs <- c(0.00040161, 0.00080321, 0.00200803, 0.00401606, 0.00682731,
           0.01044177, 0.01485944, 0.02008032, 0.02610442, 0.03293173,
           0.04056225, 0.04899598, 0.05823293, 0.06827309, 0.07911647,
           0.09076305, 0.10321285, 0.11646586, 0.13052209, 0.14538153)

x0 <- rep(10, length(probs))

result <- pval_flexible(x0, probs, max_terms = 300, verbose = TRUE)
print(result)

# Example 2: Error case (mismatched lengths)
## Not run:
x0_invalid <- c(10, 10, 10)
probs_invalid <- c(0.2, 0.3)  # Different lengths, should raise an error
result_invalid <- pval_flexible(x0_invalid, probs_invalid)
print(result_invalid)
## End(Not run)
}
