% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pvalues.R
\name{pval_exhaustive}
\alias{pval_exhaustive}
\title{Compute p-value using the Exhaustive Method}
\usage{
pval_exhaustive(
  x,
  p,
  stat = "prob",
  lambda = 0,
  max_time = 600,
  verbose = FALSE
)
}
\arguments{
\item{x}{An Integer vector with realizations for each category.}

\item{p}{A Numeric vector with the probabilities for each category. These should be non-negative and sum to one. It should be the same size as `x`.}

\item{stat}{String with the name of the statistic to compute. If `"prob"`, the exact Multinomial p-value is computed. If `"pearson"`, the Pearson's Chi-square p-value is computed. If `"llr"`, the log-likelihood ratio p-value is computed. If `"power_div"`, a Power Divergence p-value is computed, in which case a `lambda` parameter must be given. The default value is `"prob"`.}

\item{lambda}{A Numeric with the lambda value of the Power Divergence statistic. Only works if `stat = "power_div"`, otherwise is ignored.}

\item{max_time}{A Numeric with the maximum time limit in seconds. The default is 600.}

\item{verbose}{Boolean. If `TRUE`, it prints information on the run time. If `FALSE`, it does not print. The default is `FALSE`.}
}
\value{
Returns a `MultF` object with the following attributes:
\itemize{
  \item `x`: The input vector of the observed realizations for each category.
  \item `p`: The input vector of the probabilities for each category.
  \item `pval`: The p-value computed.
  \item `time`: The total execution time of the algorithm in seconds.
  \item `p0`: Probability mass function in `x`.
  \item `status`: The final status ID of the algorithm upon completion:
    \itemize{
      \item `0`: Successful computation.
      \item `1`: Maximum time reached.
    }
  \item `message`: The finishing status displayed as a message.
  \item `method`: A String with value `"exhaustive"`.
}
}
\description{
This function calculates the p-value for a multinomial test using the exhaustive method,
which evaluates all possible outcomes to compute the exact p-value. This method is
computationally intensive but provides precise results for small datasets.
}
\examples{
# Example 1: Compute p-value using the exhaustive method
probs <- c(0.00040161, 0.00080321, 0.00200803, 0.00401606, 0.00682731,
           0.01044177, 0.01485944, 0.02008032, 0.02610442, 0.03293173,
           0.04056225, 0.04899598, 0.05823293, 0.06827309, 0.07911647,
           0.09076305, 0.10321285, 0.11646586, 0.13052209, 0.14538153)

x0 <- rep(10, length(probs))

result <- pval_exhaustive(x0, probs, verbose = TRUE)
print(result)

# Example 2: Error case (mismatched lengths)
## Not run:
x0_invalid <- c(10, 10, 10)
probs_invalid <- c(0.2, 0.3)  # Different lengths, should raise an error
result_invalid <- pval_exhaustive(x0_invalid, probs_invalid)
print(result_invalid)
## End(Not run)
}
